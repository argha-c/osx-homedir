#!/usr/bin/env bash

set -e

main() {
  cd ~/
  invoke_softewareupdate
  update_submodules
  invoke_sprout_wrap
  invoke_homebrew
}


invoke_sprout_wrap() {
  if [ ! -d ~/workspace/sprout-wrap ]
  then
    git clone git@github.com:scottmuc/sprout-wrap ~/workspace/sprout-wrap
  fi

  ~/workspace/sprout-wrap/runsoloist
}

invoke_homebrew() {
  if [ ! -x /usr/local/bin/brew ]
  then
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  else
    brew update || true
  fi

  brew bundle
}

update_submodules() {
  git submodule update --init --recursive
}

run_softwareupdate() {
  local softwareupdate_indicator
  softwareupdate_indicator="$1"
  sudo softwareupdate -i -a && touch "${softwareupdate_indicator}"
}

run_softwareupdate_notify_reboot() {
  local softwareupdate_indicator
  softwareupdate_indicator="$1"
  echo Running system updates
  if (sudo softwareupdate -l | grep -q restart)
  then
    run_softwareupdate "${softwareupdate_indicator}"
    echo Reboot is needed
    exit 0
  else
    run_softwareupdate "${softwareupdate_indicator}"
  fi
}

last_softwareupdate_was_over_7_days_ago() {
  local softwareupdate_indicator
  softwareupdate_indicator="$1"
  last_run=$(echo $(($(date +%s) - $(stat -t %s -f %m -- "${softwareupdate_indicator}"))))
  last_run_days=$(( $last_run / (24 * 60 * 60) ))
  echo Last software update was $last_run_days days ago
  [ "${last_run_days}" -gt "7" ]
}


invoke_softewareupdate() {
  local softwareupdate_indicator
  softwareupdate_indicator=~/.softwareupdate_indicator

  if [ ! -f "${softwareupdate_indicator}" ]
  then
    echo Indicator of previous softwareupdate execution does not appearr to exist.
    run_softwareupdate_notify_reboot "${softwareupdate_indicator}"
  else
    if last_softwareupdate_was_over_7_days_ago "${softwareupdate_indicator}"
    then
      echo Going to run a softwareupdate since it has been a while
      run_softwareupdate_notify_reboot "${softwareupdate_indicator}"
    else
      echo Since softwareupdate ran recently, not going to do anything
      echo remove ${softwareupdate_indicator} to force an update
    fi
  fi
}

main
